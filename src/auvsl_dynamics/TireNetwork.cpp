#include "TireNetwork.h"
#include "generated/model_constants.h"
#include <cmath>
#include <cppad/cppad.hpp>
#include <iostream>


Eigen::Matrix<Scalar,TireNetwork::num_hidden_nodes,TireNetwork::num_in_features> TireNetwork::weight0;
Eigen::Matrix<Scalar,TireNetwork::num_hidden_nodes,TireNetwork::num_hidden_nodes> TireNetwork::weight2;
Eigen::Matrix<Scalar,TireNetwork::num_out_features,TireNetwork::num_hidden_nodes> TireNetwork::weight4;
Eigen::Matrix<Scalar,TireNetwork::num_hidden_nodes,1> TireNetwork::bias0;
Eigen::Matrix<Scalar,TireNetwork::num_hidden_nodes,1> TireNetwork::bias2;
Eigen::Matrix<Scalar,TireNetwork::num_out_features,1> TireNetwork::bias4;
Eigen::Matrix<Scalar,TireNetwork::num_out_features,1> TireNetwork::out_std;
Eigen::Matrix<Scalar,TireNetwork::num_in_features,1> TireNetwork::in_mean;
Eigen::Matrix<Scalar,TireNetwork::num_in_features,1> TireNetwork::in_std_inv;


int TireNetwork::is_loaded = 0;


TireNetwork::TireNetwork(){
  if(!is_loaded){
    load_model();
  }
}
TireNetwork::~TireNetwork(){}

//type overloading problem when taking address of std::tanh
//there is probably a smarter way to do this with templates.
inline double tanh_double_wrapper(double x){
  return std::tanh(x);
}

inline Scalar tanh_scalar_wrapper(Scalar x){
  return CppAD::tanh(x);
}

inline Scalar relu_wrapper(Scalar x){
  Scalar zero{0};
  return CppAD::CondExpGt(x, zero, x, zero);
}


// vx vy w zr kc kphi n0 n1 phi
void TireNetwork::forward(const Eigen::Matrix<Scalar,9,1> &in_vec, Eigen::Matrix<Scalar,num_out_features,1> &out_vec){
  Eigen::Matrix<Scalar,TireNetwork::num_hidden_nodes,1> layer0_out;
  Eigen::Matrix<Scalar,TireNetwork::num_hidden_nodes,1> layer2_out;
  Eigen::Matrix<Scalar,TireNetwork::num_out_features,1> layer4_out;
  Eigen::Matrix<Scalar,TireNetwork::num_in_features,1> scaled_features;
  Eigen::Matrix<Scalar,TireNetwork::num_in_features,1> bekker_vec;
  
  // Changes features to cross the origin
  Scalar tire_tangent_vel = in_vec[2] * Jackal::rcg::tire_radius;
  Scalar diff = tire_tangent_vel - in_vec[0];
  Scalar slip_lon = CppAD::abs(diff);
  Scalar slip_lat = CppAD::abs(in_vec[1]);
  Scalar tire_abs = CppAD::abs(in_vec[2]);
  
  bekker_vec[0] = in_vec[3];
  bekker_vec[1] = slip_lon;
  bekker_vec[2] = tire_abs;
  bekker_vec[3] = slip_lat;
  bekker_vec[4] = in_vec[4];
  bekker_vec[5] = in_vec[5];
  bekker_vec[6] = in_vec[6];
  bekker_vec[7] = in_vec[7];
  bekker_vec[8] = in_vec[8];

  // Apply scaling after calculating the bekker features from kinematics
  scaled_features = (bekker_vec - in_mean).cwiseProduct(in_std_inv);

  // Actual NN math
  layer0_out = (weight0*scaled_features) + bias0;
  layer0_out = layer0_out.unaryExpr(&tanh_scalar_wrapper);
  layer2_out = (weight2*layer0_out) + bias2;
  layer2_out = layer2_out.unaryExpr(&tanh_scalar_wrapper);
  layer4_out = (weight4*layer2_out) + bias4;        
  
  // Sign change passivity haxx
  out_vec[0] = relu_wrapper(layer4_out[0])*CppAD::tanh(1*diff);
  out_vec[1] = relu_wrapper(layer4_out[1])*CppAD::tanh(-1*in_vec[1]);
  out_vec[2] = relu_wrapper(layer4_out[2])/(1 + CppAD::exp(-1*in_vec[3]));
  
  // Scale output
  out_vec = out_vec.cwiseProduct(out_std);
}


int TireNetwork::getNumParams()
{
  return (weight0.size() +
	  bias0.size() +
	  weight2.size() +
	  bias2.size() +
	  weight4.size() +
	  bias4.size());
}

void TireNetwork::setParams(const VectorS &params, int idx)
{
  assert(params.size() == getNumParams());
  for(int i = 0; i < weight0.rows(); i++)
  {
    for(int j = 0; j < weight0.cols(); j++)
    {
      weight0(i,j) = params[idx];
      idx++;
    }
  }
  for(int j = 0; j < bias0.size(); j++)
  {
    bias0[j] = params[idx];
    idx++;
  }
  
  for(int i = 0; i < weight2.rows(); i++)
  {
    for(int j = 0; j < weight2.cols(); j++)
    {
      weight2(i,j) = params[idx];
      idx++;
    }
  }
  for(int j = 0; j < bias2.size(); j++)
  {
    bias2[j] = params[idx];
    idx++;
  }

  for(int i = 0; i < weight4.rows(); i++)
  {
    for(int j = 0; j < weight4.cols(); j++)
    {
      weight4(i,j) = params[idx];
      idx++;
    }
  }
  for(int j = 0; j < bias4.size(); j++)
  {
    bias4[j] = params[idx];
    idx++;
  }
}

void TireNetwork::getParams(VectorS &params, int idx)
{
  assert(params.size() == getNumParams());
  
  for(int i = 0; i < weight0.rows(); i++)
  {
    for(int j = 0; j < weight0.cols(); j++)
    {
      params[idx] = weight0(i,j);
      idx++;
    }
  }
  for(int j = 0; j < bias0.size(); j++)
  {
    params[idx] = bias0[j];
    idx++;
  }
  
  for(int i = 0; i < weight2.rows(); i++)
  {
    for(int j = 0; j < weight2.cols(); j++)
    {
      params[idx] = weight2(i,j);
      idx++;
    }
  }
  for(int j = 0; j < bias2.size(); j++)
  {
    params[idx] = bias2[j];
    idx++;
  }

  for(int i = 0; i < weight4.rows(); i++)
  {
    for(int j = 0; j < weight4.cols(); j++)
    {
      params[idx] = weight4(i,j);
      idx++;
    }
  }
  for(int j = 0; j < bias4.size(); j++)
  {
    params[idx] = bias4[j];
    idx++;
  }
}



int TireNetwork::load_model(){
  std::cout << "Loading Model\n";
    
  is_loaded = 1;
  
weight0 << -3.8754e-02,  2.5204e-01,  6.8137e-01, -3.0718e-03,  4.8275e-03,
         1.0472e-04, -3.2954e-02, -1.1278e+00, -1.6554e-02, -2.9067e-01,
         1.2154e-01,  3.1500e-02,  3.0323e-01, -7.6122e-03, -1.7777e-03,
        -1.4095e-01, -2.7798e-02, -3.7780e-01,  3.2883e-02, -5.0956e-01,
         1.0326e-01, -2.3918e-02,  1.1919e-02,  1.9519e-02, -1.2179e-02,
         1.0650e+00, -6.1345e-02,  5.1459e-02, -6.1966e-02,  2.3515e-01,
        -2.1266e-02, -4.0965e-01, -7.4563e-01,  2.7091e-01, -4.3709e-02,
         5.1862e-03, -1.0832e-01, -1.2823e+00, -1.1350e-01, -2.0477e-03,
        -2.0588e-02, -3.0690e-02,  9.5011e-02,  5.7651e-01,  1.7573e-02,
        -1.1214e-01,  5.6062e-01, -9.6912e-01,  1.3167e-03, -1.0610e-01,
        -1.7349e-01,  6.3020e-01,  5.7683e-01,  1.0645e-02,  5.1989e-02,
        -4.4895e-01,  2.3498e-01, -4.7674e-02,  1.1825e-02,  3.2789e-02,
         5.8775e-01, -2.7128e-01,  1.0617e-01, -1.6792e-01,  2.7950e-01,
        -4.8402e-01,  2.6828e-02, -6.0177e-02, -9.6801e-02,  6.5676e-01,
         2.4028e-01, -4.1812e-02,  1.1087e-01, -9.2853e-02, -1.2918e+00,
        -2.7253e-02,  3.5976e-02,  8.3285e-02, -4.8510e-01, -7.7557e-02,
         4.4795e-02,  1.9282e-01,  2.4282e-01, -7.7835e-01, -3.1660e-02,
         9.9933e-02,  1.9629e-01, -6.4774e-01,  2.8432e-01,  2.7750e-02,
         1.0690e-01,  1.4307e+00,  5.7567e-01,  1.6239e-02,  6.3319e-02,
         1.1315e-01, -3.9517e-01, -6.0641e-01, -1.6427e-03,  4.5062e-02,
        -5.4518e-02, -1.9401e+00, -5.7888e-02,  3.9127e-03,  1.6279e-02,
         1.3500e-01, -5.0587e-02,  1.3377e-01, -1.8530e-01,  7.2977e-01,
         9.1199e-02, -1.9924e-01, -7.5295e-03, -5.3926e-03,  5.5352e-02,
        -5.0182e-02,  9.4717e-02, -1.3353e-02,  4.1906e-01,  2.0225e-01,
        -3.4142e-02,  5.0276e-03,  1.0448e-02, -7.7242e-02, -1.2500e+00,
        -9.1551e-03,  9.4803e-02,  8.6345e-01, -7.1672e-01, -3.0454e-02,
        -3.3829e-02, -5.5114e-02, -2.2036e-02,  8.5751e-01,  9.1874e-03,
        -1.3171e-01,  6.2483e-01, -5.2785e-01,  5.2229e-03, -5.3002e-02,
        -9.2060e-02,  3.8293e-01, -1.3253e+00, -1.2029e-03, -5.0214e-01,
         1.7673e-01, -7.1399e-01,  1.7974e-03,  6.6744e-02,  1.3417e-01,
        -3.7301e-01,  1.5696e-01, -1.7577e-02, -2.1855e-01, -7.0476e-01,
         2.7815e-01, -6.6042e-03, -1.1213e-01, -2.4450e-01,  1.0099e+00,
        -6.9962e-01,  1.8906e-02, -3.3897e-03, -7.0275e-01, -1.5093e-01,
        -4.6126e-01, -1.2296e-02, -1.4382e-02, -1.2670e-02,  8.6206e-02,
        -2.2028e-01,  4.4657e-01, -9.1149e-02,  1.0418e-03,  6.2338e-02,
         1.0365e-02,  9.2029e-03, -1.4908e-01, -5.4253e-02, -5.8784e-02,
        -1.9021e-02, -1.1240e+00,  6.9575e-01,  2.3619e-02, -3.1694e-02,
        -1.1841e-02, -6.0230e-02,  1.8672e-01,  3.9790e-02, -2.8101e-01,
         1.7637e-01,  4.4306e-01,  2.3205e-02, -3.3200e-02, -3.3761e-02,
         8.3090e-01,  1.7483e-01, -3.1536e-02,  1.3339e-01,  8.0703e-01,
        -3.4752e-02, -2.9041e+00, -2.4007e-03, -2.0511e-02,  8.7366e-02,
         6.3582e-02,  1.8052e-01,  3.3951e-02,  5.4936e-01,  1.9561e-02,
        -1.0599e+00,  1.9422e-02,  3.3995e-02,  4.2695e-02,  4.5187e-02,
         4.7490e-02, -1.7950e-01,  6.1314e-01,  2.0548e-01, -1.8315e-02,
        -8.3401e-02, -1.5669e-01,  6.4436e-01,  5.8073e-01, -4.0708e-02,
         3.6276e-01, -5.3978e-01,  2.2723e-01,  1.0708e-02,  6.3050e-02,
         1.1565e-01, -4.7992e-01, -5.5138e-01, -8.2678e-02, -5.4483e-02,
         1.0702e+00, -6.5907e-01, -2.1934e-02, -2.0204e-02, -5.6729e-02,
         2.6318e-01,  1.0859e+00, -4.5134e-03, -1.4641e+00, -9.6084e-02,
         2.0356e-01, -1.4528e-02,  1.3309e-02,  2.1211e-02,  2.2147e-01,
        -7.6017e-02,  2.9559e-02, -5.3460e-02,  2.5995e-01,  3.4196e-01,
         3.3396e-02,  2.0138e-02,  2.6488e-02, -8.3332e-03,  1.4931e-01,
        -2.4760e-02, -1.6423e-01, -1.4070e-01, -1.1362e-01, -1.7734e-02,
        -4.7572e-02, -4.4709e-02,  2.6885e-01,  4.4223e-02,  4.2867e-01,
        -5.3875e-01, -1.0493e-01, -2.7075e-03, -1.5787e-03,  5.9200e-03,
        -5.7447e-03, -2.5495e-01, -5.6037e-02, -3.0432e-02, -4.1825e-01,
         5.4326e-01,  6.4113e-02,  6.4994e-02, -6.4301e-03, -1.3824e-02,
         1.6640e-02,  6.2159e-03,  2.9274e-02,  3.2557e-02, -8.4949e-01,
        -5.4012e-02, -4.3487e-01,  1.8312e-03,  1.4714e-02,  2.5633e-02,
         3.6129e-02,  1.5363e-01, -2.3833e-02,  1.2319e+00, -2.2883e-01,
         1.3671e-02,  6.2576e-03, -8.5946e-03,  1.5023e-01, -4.1739e-01,
        -2.6566e-02, -1.2014e-01, -4.0500e-01,  1.2635e+00,  2.8310e-02,
        -1.6986e-02, -3.3430e-02,  1.8505e-01, -4.3205e-01,  3.8589e-05;
bias0 << -0.7160,  0.6238,  2.2367, -1.5583, -2.4155,  0.8340, -0.1954,  1.4789,
        -1.2851,  0.1754,  2.9250, -2.4385,  0.9114, -2.0840, -0.8803, -2.7942,
        -1.0238, -1.7624, -2.3005,  1.7492, -0.6926, -0.0531, -2.4387,  0.3415,
         1.3000, -0.7235,  1.0016, -2.1512,  1.2915,  0.8433, -0.2522,  0.3154,
        -1.8777,  2.0598,  1.5066;
weight2 << -2.6085e-01, -5.0752e-01,  3.3065e-01,  3.7463e-01, -5.7096e-01,
         4.2641e-01,  7.4434e-02, -4.1749e-01, -1.5698e-01, -3.6080e-01,
         6.7574e-01, -8.5840e-02, -3.5315e-01, -2.4828e-01,  2.0209e-01,
        -1.0083e+00,  1.0064e-01,  9.5790e-02, -5.5451e-01,  1.1366e+00,
        -4.7586e-01,  5.7053e-02, -1.5079e-01, -4.5067e-01,  1.5103e-01,
        -8.9324e-01,  4.3640e-01,  3.6237e-01,  6.2247e-01,  1.5125e+00,
        -2.0923e-01,  5.0652e-01,  4.8093e-01,  4.4605e-01, -6.9301e-01,
        -1.0342e+00, -7.4195e-02,  1.2965e+00,  4.0929e-01, -1.3467e+00,
         1.0768e+00,  9.8125e-02,  9.6861e-01, -1.0438e+00, -9.8263e-01,
         1.7719e+00, -4.6513e-01, -3.2074e-01, -1.4540e+00,  7.1187e-01,
        -1.9500e+00,  6.0391e-01,  1.1839e+00, -5.5655e-01, -2.9533e-01,
        -1.0257e+00,  1.0088e+00,  1.4081e-01, -1.7910e-01,  6.0186e-01,
        -7.0230e-01,  1.0332e+00,  7.5130e-01, -1.4705e-01, -3.9318e-01,
         3.3816e-02,  4.7689e-01, -1.1090e-01,  1.5177e+00, -5.1731e-01,
        -1.6447e+00, -1.1593e-02,  8.1371e-01,  1.2667e-01, -1.1495e+00,
         1.3057e-01, -1.1982e-01, -6.9521e-02, -2.4347e-01, -5.3220e-01,
         1.0965e+00,  1.5642e+00, -9.4940e-01, -1.2006e+00,  1.9837e+00,
        -6.3973e-01,  1.0044e+00,  2.9403e-01,  8.5439e-01, -9.7600e-01,
        -2.2555e+00,  1.1599e+00,  3.9434e-03, -3.6219e-01, -2.1056e-01,
         5.0283e-01,  6.1200e-01,  3.9044e-01, -1.9565e+00, -6.7007e-02,
        -1.1450e-01,  9.9823e-02, -1.1024e-01,  1.3838e+00, -2.8912e+00,
        -1.8055e-02,  2.0713e-02, -7.0038e-02, -1.0875e-01, -3.1253e-01,
        -1.2769e-01,  9.7924e-02,  1.2534e-01, -2.4699e-02, -2.1346e-02,
        -6.8501e-02, -3.9644e-02, -3.6618e-01, -5.1306e-02,  4.7012e-02,
        -5.1754e-02, -3.2164e-02,  5.3817e-02,  7.8692e-01,  3.7015e-01,
         2.3545e-02, -5.4061e-02,  5.8626e-02,  3.7692e-01, -7.8688e-02,
        -1.4167e-02, -5.1520e-03, -2.7570e-01, -1.3745e-01,  2.6171e-02,
        -1.0542e-01, -3.0043e-01,  6.8009e-01, -1.4393e-01, -1.7671e-02,
         1.2610e-01, -4.3930e-02,  3.5495e-01,  1.1557e-02, -5.5450e-01,
         2.4570e-02, -4.1040e-02,  3.6000e-01, -7.1225e-02, -1.3350e-01,
         4.0679e-01,  1.2135e-01, -8.6702e-01, -3.8594e-03,  1.2728e-01,
         1.5646e-01,  1.4468e-01,  8.8952e-02,  4.7664e-02,  8.9715e-01,
         2.8754e-01,  6.1304e-02, -2.2658e-02, -5.7754e-01,  3.4770e-01,
         3.4071e-01,  3.2958e-01,  4.9646e-01,  3.5344e-01,  5.6265e-02,
         3.6307e-01, -2.7254e-01,  3.5966e-01,  3.1208e-01,  1.8611e-02,
         9.5497e-01,  4.2479e-02, -1.0191e+00, -9.7336e-01,  1.2457e+00,
        -9.4186e-01,  9.0655e-02, -5.8024e-01,  1.1178e+00,  7.2275e-01,
        -1.5062e+00, -1.4642e-01, -1.5135e-02,  1.6438e+00, -1.0191e+00,
         1.6683e+00, -4.7078e-01, -5.4212e-01, -2.0170e-01,  4.6688e-01,
         9.9396e-01, -1.2961e+00,  3.1655e-03,  3.2336e-02, -4.4950e-01,
         3.6466e-01, -1.0175e+00, -4.8611e-01, -1.6986e-01, -2.0611e-01,
        -1.9766e-01,  7.7352e-02,  1.4756e-01, -1.5136e+00,  1.8420e+00,
        -9.2410e-01,  7.2430e-01,  1.2604e+00,  5.1615e-01, -1.3334e+00,
         1.1338e+00,  2.2979e-01,  6.4987e-01, -9.7832e-01, -7.7614e-01,
         1.3343e+00, -5.8604e-01, -2.3686e-01, -1.2143e+00,  4.6908e-01,
        -1.5865e+00,  6.8300e-01,  1.0129e+00, -7.9659e-01, -1.2043e-01,
        -1.2306e+00,  7.6514e-01, -3.5244e-01, -6.9165e-01,  7.8899e-01,
        -4.1851e-01,  1.0528e+00,  7.5533e-01,  1.4524e-02, -1.1865e-01,
        -3.9379e-01,  3.2002e-01, -8.1130e-01,  1.3901e+00, -1.1546e+00,
        -8.5995e-02,  3.8161e-02, -1.9187e-01, -3.3251e-02, -1.9798e-01,
        -1.0724e-01,  3.6294e-02, -4.8064e-02,  7.0295e-02, -1.0136e-01,
        -7.6871e-02, -1.6815e-02, -6.8983e-01, -1.1294e-02, -3.8937e-02,
        -1.1325e-01,  1.4638e-02, -4.2883e-03,  5.8105e-01, -7.1544e-01,
        -2.1953e-02, -1.5846e-01, -1.0986e+00, -3.5260e-01, -5.9006e-02,
        -1.3755e-01, -1.5275e-01, -1.6774e-01, -4.3748e-02,  7.2199e-02,
        -2.8262e-01,  1.3842e-01,  8.6795e-01, -2.4018e-02,  1.4941e-01,
        -9.5921e-01,  5.8707e-01,  1.4566e+00,  7.7944e-01, -1.3425e+00,
         1.0389e+00,  1.6672e-01,  4.2921e-01, -9.8820e-01, -1.0153e+00,
         1.2495e+00, -4.4787e-01, -2.5863e-01, -1.4070e+00,  6.3759e-01,
        -1.5434e+00,  5.9876e-01,  7.3776e-01, -2.4531e-01, -4.5399e-01,
        -1.3574e+00,  6.9014e-01,  1.2165e-01, -2.9125e-01,  6.4185e-01,
        -5.3583e-01,  1.1837e+00,  7.2803e-01, -2.2707e-01,  1.1537e-01,
        -2.6578e-01, -8.4069e-02, -1.0148e+00,  1.4573e+00, -1.1571e+00,
        -1.1553e-01,  5.0248e-01, -1.3358e+00, -3.6803e-01,  2.3692e-02,
        -4.3158e-01,  5.6070e-01, -4.2304e-01,  1.6765e-03, -1.5729e-01,
        -9.6979e-02, -2.5094e-01, -8.4968e-01, -1.1595e-01,  1.9851e-01,
        -1.9192e-01,  1.4172e-01,  5.4727e-02,  1.3831e+00, -4.4761e-01,
         2.2729e-01, -3.5411e-01,  4.2255e-01,  1.5381e+00, -2.2352e-01,
         2.9893e-02,  3.9367e-02, -6.8923e-01, -6.8638e-01,  1.2710e+00,
        -1.0810e-01, -1.0781e+00,  9.4087e-01, -1.4142e-01,  1.4553e-01,
         9.9796e-01, -1.6447e+00, -1.3056e+00, -3.7497e-01,  1.5152e+00,
        -1.1438e+00, -1.6840e-01, -9.4829e-01,  1.1749e+00,  7.6864e-01,
        -1.1854e+00,  9.4452e-01, -1.3714e-01,  1.2675e+00, -4.1840e-01,
         1.9704e+00, -8.4090e-01, -1.1520e+00,  1.5517e+00, -4.0924e-01,
         1.6177e+00, -7.4769e-01,  9.5312e-01,  1.1982e+00, -1.1512e+00,
         2.8109e-01, -9.3778e-01, -5.4924e-01,  1.2463e-01,  2.6874e-01,
         9.1240e-01, -1.0201e+00,  5.1439e-01, -1.5659e+00,  1.3433e+00,
        -2.6082e-01, -8.2520e-01, -2.1228e-01, -1.6618e-01, -6.4940e-01,
         3.0500e-01,  6.2177e-01,  3.6928e-01,  1.7040e-01,  3.9974e-01,
         4.4414e-03,  2.4782e-01, -8.2544e-01,  1.5391e-01,  6.8694e-02,
        -6.4236e-01, -7.2673e-01, -5.9218e-01, -1.1106e+00,  1.3173e+00,
        -3.3919e-01,  2.9168e-01, -1.8226e-02, -8.9024e-01,  8.3162e-01,
         4.0086e-02,  6.1527e-01,  6.6552e-01,  9.5834e-01, -3.8367e-01,
        -1.1652e+00, -7.7974e-01, -7.9901e-01,  1.0100e+00, -3.6329e-01,
         4.3796e-01,  4.9541e-02, -4.4403e-01, -1.3044e-01,  1.4990e+00,
        -6.9649e-01,  2.0111e-01, -1.1465e+00,  5.1921e-01, -6.5273e-01,
        -2.3367e-01, -5.7221e-02,  1.2379e+00,  4.0295e-01, -1.4923e-01,
         4.1226e-01,  1.6141e+00, -6.5137e-02,  2.0729e+00, -1.2162e+00,
         8.9919e-01, -2.8397e-01,  3.7878e-01,  1.2199e+00, -9.1153e-01,
        -1.3215e-01, -8.8449e-01,  9.9726e-01, -1.0525e+00,  4.5535e-01,
         1.4394e+00,  1.7193e+00,  1.5883e+00, -9.5585e-01,  5.1894e-01,
         7.8992e-02, -1.6373e-01,  1.0373e+00,  6.2586e-01, -2.9497e-01,
         4.9988e-01, -6.1114e-01,  7.8544e-01, -2.2100e-01,  2.2119e-02,
         4.6090e-01,  3.0496e-01,  1.4190e+00,  6.7394e-02,  2.3399e-01,
        -4.5348e-01, -6.1221e-01, -1.6367e-01, -2.8969e+00,  9.0046e-01,
        -8.1191e-01,  3.9517e-01, -2.4628e+00, -1.9529e-01,  3.7105e-01,
        -2.2270e-01,  2.8281e-01,  5.3287e-01,  1.6061e+00, -1.2598e+00,
        -3.6521e-01,  1.6537e+00, -2.5949e+00,  4.1417e-01, -9.3353e-01,
        -3.6022e-01,  9.0206e-01,  1.8435e+00,  5.8930e-01, -1.2900e+00,
         9.2961e-01, -1.1234e+00,  1.7497e+00, -7.3089e-01, -7.2706e-01,
         1.7296e+00, -3.8531e-02,  7.5754e-01, -5.7884e-01,  6.3215e-01,
        -1.2859e+00, -2.6789e-01, -4.9924e-02, -5.0634e+00,  8.3182e-01,
        -1.1094e+00, -5.5598e-02, -4.2310e+00, -1.2365e+00,  9.6282e-01,
        -8.3975e-01,  4.9592e-01,  7.2157e-01,  1.8128e+00, -8.7819e-01,
        -7.5549e-01,  1.5478e+00, -3.4197e+00,  1.1706e+00, -1.7797e+00,
         1.1032e+00,  2.9404e-01, -1.1170e+00, -7.1604e-01,  1.3837e+00,
        -7.0791e-01, -5.0566e-01, -3.7874e-01,  7.5500e-01,  8.6941e-01,
        -8.1998e-01,  4.3809e-01, -1.8975e-01,  1.2905e+00, -6.9969e-01,
         1.2700e+00, -5.8440e-01, -7.1450e-01, -2.8020e-02, -8.1558e-01,
         1.0962e+00, -6.0168e-01, -2.4159e-01, -2.9003e-02, -4.2473e-01,
         5.6958e-01, -1.0991e+00, -4.5021e-01,  2.8763e-01, -2.6582e-01,
         6.0350e-01, -1.4132e-01, -4.8995e-01, -1.2550e+00,  6.6752e-01,
         2.0208e-01, -4.1365e-01, -6.5383e-01, -2.8956e-01,  4.7436e-01,
        -4.7185e-01,  4.8108e-02, -3.6551e-01,  2.7567e-01,  4.0641e-01,
        -3.6389e-01, -2.3859e-01, -2.1271e-01,  2.3670e-02, -3.0072e-01,
         7.2291e-01, -2.1127e-01, -2.5965e-02,  4.3573e-01,  2.5338e-01,
         1.1676e-01, -1.9289e-01,  2.2121e-03,  1.5006e-01, -2.3186e-01,
         4.8104e-01, -5.1495e-01, -5.2102e-01, -2.5198e-01,  4.4252e-01,
         1.8672e-02,  3.9845e-01,  5.6100e-01, -8.1678e-01,  8.5385e-01,
        -6.9394e-01, -2.8719e-01,  8.4462e-01,  6.7682e-01, -8.8350e-01,
         6.5897e-01,  1.3611e-02,  2.0868e-01, -7.3901e-01, -5.5931e-01,
         1.3874e+00,  1.5257e-01,  1.7517e-01, -1.1625e+00,  8.1700e-01,
        -1.2762e+00,  3.8793e-01,  3.6345e-01,  4.3193e-01,  9.0417e-01,
        -6.1897e-01,  9.0100e-01,  3.7057e-03,  1.9059e-02,  1.3093e-01,
        -6.3547e-01,  8.1853e-01,  6.5094e-01, -3.7506e-01,  3.6701e-01,
        -4.4998e-02, -4.5341e-02,  7.3939e-01,  1.1205e+00, -1.1261e+00,
         1.4366e+00, -7.5972e-02, -1.7228e+00, -1.5557e+00,  1.8351e+00,
        -1.3712e+00, -2.4469e-01, -7.8535e-01,  9.4323e-01,  9.7553e-01,
        -1.9963e+00,  2.9832e-01, -3.6344e-01,  2.3613e+00, -1.0909e+00,
         2.4507e+00, -6.4126e-01, -1.2784e+00, -2.9337e-01,  5.0482e-01,
         1.3383e+00, -1.4313e+00, -8.4613e-02,  1.1416e-02, -8.8089e-01,
         8.9803e-01, -1.5261e+00, -9.5429e-01,  3.1370e-04, -2.7193e-01,
         3.0973e-01,  3.8023e-02,  6.1088e-01, -2.1818e+00,  1.5883e+00,
         2.3576e-01, -5.6545e-02, -6.3800e-01, -3.4973e-01,  3.7258e-01,
        -7.2749e-02,  8.3617e-02, -5.2767e-01, -3.6983e-01,  3.5709e-02,
        -1.2084e-01, -6.2494e-02, -3.5590e-04,  6.2713e-01, -4.9897e-01,
         9.2858e-02, -1.8916e-01, -3.0170e-01,  2.0903e-01,  1.4086e-02,
         1.3491e-01, -4.1681e-01,  4.8776e-03, -9.9477e-04, -3.5089e-01,
         5.8633e-01, -3.7701e-01, -5.8100e-01, -7.6662e-01,  4.5852e-02,
        -1.4380e-01,  8.4908e-02, -1.3952e-01, -8.3030e-01,  6.8350e-01,
        -1.5219e+00, -2.9587e-01,  1.7683e+00,  1.3160e+00, -1.9904e+00,
         1.5182e+00,  1.8720e-01,  1.0774e+00, -1.2211e+00, -1.3244e+00,
         2.4563e+00, -4.8790e-01,  1.7596e-01, -2.3142e+00,  1.0628e+00,
        -2.7025e+00,  7.0654e-01,  1.5826e+00,  1.9376e-01, -4.3105e-01,
        -1.4646e+00,  1.2096e+00, -1.9632e-02, -2.8008e-02,  9.7569e-01,
        -6.1907e-01,  1.6809e+00,  9.0155e-01, -1.8557e-01,  2.7090e-02,
        -2.1423e-01,  4.2755e-02, -3.4752e-01,  2.1137e+00, -1.2092e+00,
         6.5373e-02,  4.0066e-01, -1.1049e-01,  1.8919e-01,  2.4439e-02,
        -1.5915e-01, -1.7777e-01,  5.1046e-01, -2.5712e-01, -2.1041e-01,
        -1.0461e-01, -1.5340e-01, -4.9574e-01, -1.8142e-02, -2.0097e-01,
         1.0395e-01, -1.7073e-02,  1.2721e-01,  4.1322e-01, -9.4396e-01,
        -1.3195e-02, -6.3122e-01,  4.7053e-02,  1.5418e-02,  3.9031e-01,
         1.5183e-01, -5.0178e-02, -3.8014e-02, -4.7764e-01, -2.0685e-01,
        -7.2059e-02,  5.0740e-01,  4.0895e-01,  4.6516e-02,  1.5052e-01,
        -2.9087e-01, -3.8904e-01,  7.0801e-02,  1.0537e-01, -2.5442e-01,
         4.4322e-01,  1.4314e-01, -1.3794e-02,  1.1289e-01, -4.2267e-01,
         2.2260e-02, -1.2275e-01,  2.6354e-01,  1.6301e-01, -1.4762e-01,
        -6.4096e-01,  1.1165e-01, -1.4411e-02, -3.8551e-01,  5.7691e-01,
        -1.2171e-01,  2.9668e-02,  1.4775e+00,  1.3452e-01,  3.6283e-01,
        -4.6235e-01,  7.1893e-01,  3.0169e-01,  5.1080e-01, -4.5403e-01,
         2.7264e-01, -2.3356e-01, -1.1702e+00,  1.0324e+00, -2.2696e-01,
        -1.1002e+00, -5.4218e-02,  1.1859e+00,  4.6808e-01, -1.0966e+00,
         6.4454e-01,  2.7832e-02, -3.2160e-01, -8.5908e-01, -7.7918e-01,
         1.0177e+00, -1.0971e-01, -9.3465e-02, -1.3070e+00,  6.8767e-01,
        -8.1096e-01,  5.8114e-01,  3.4578e-01,  5.4090e-02,  4.6404e-01,
        -1.1958e+00,  8.0521e-01,  3.7646e-03, -3.4088e-02,  3.3205e-01,
        -3.4983e-01,  1.2897e+00,  4.5101e-01, -3.8722e-01,  2.3272e-02,
        -5.9774e-01, -2.9805e-01,  2.1221e-02,  1.5659e+00, -9.6299e-01,
        -2.1445e-01,  8.2597e-02,  7.5556e-01,  4.4207e-01, -3.9992e-01,
         3.5185e-01, -3.0629e-01, -6.6053e-01,  2.5628e-01,  9.5020e-01,
         5.3254e-01,  3.1093e-01,  2.1268e-01, -5.1273e-01, -7.2367e-01,
        -1.9460e-01, -2.6709e-01,  3.0732e-01, -1.1381e-01,  6.5527e-01,
        -3.1162e-01, -1.7863e-01, -2.2409e-02, -1.6825e-01, -6.6459e-01,
        -1.7153e-02,  6.3043e-01,  9.5842e-01,  9.1743e-01,  1.6743e-01,
         2.2255e-02, -2.7821e-01, -7.5973e-01,  3.6856e-01,  3.0778e-01,
        -2.8114e-01,  7.8068e-01,  8.6191e-01,  3.4589e-01, -1.1535e+00,
         1.0399e+00,  2.6907e-01,  9.1797e-02,  1.3391e-01,  1.4076e-01,
         7.5476e-01, -2.6331e-01, -5.0206e-01, -2.9405e-01,  5.2313e-03,
        -4.4917e-01, -4.8993e-01,  1.2860e-02, -3.2655e-01,  8.5224e-01,
        -6.2103e-01,  2.5256e-01, -6.3571e-02, -1.7217e-01,  8.7990e-01,
         3.3300e-01,  6.4223e-01,  3.6906e-01,  5.4529e-01, -7.3268e-01,
        -1.2136e+00, -8.6331e-01, -9.5140e-02,  3.2978e-01, -1.8684e-01,
         3.8042e-01,  5.3620e-01, -4.3699e-01, -2.7616e-01,  7.4294e-01,
        -3.5496e-01,  1.0828e-01, -2.7757e-01,  7.1196e-01,  4.8994e-01,
        -6.7762e-01,  1.2197e-01,  1.4507e-01,  5.9362e-01, -3.8903e-01,
         9.3029e-01, -4.7154e-01, -4.8570e-01,  4.0433e-01, -1.1026e+00,
         5.9057e-01, -4.5823e-02, -1.4191e+00, -2.9321e-02, -3.8351e-01,
         5.2477e-01, -3.5866e-01, -5.8752e-01,  1.1602e-01, -3.4411e-01,
         3.1536e-01,  5.1310e-02,  1.1355e+00, -6.0460e-01,  9.8505e-01,
        -3.2201e-02, -5.3726e-02,  5.0701e-02,  1.5667e-02, -5.6922e-02,
        -6.4758e-02, -7.6822e-03,  2.0084e-01,  9.9545e-03,  5.0971e-03,
        -4.5090e-02,  3.9062e-03,  5.4893e-01,  5.3729e-02,  4.9290e-03,
         1.6131e-02, -2.0355e-02, -4.9801e-04, -2.2470e-01,  7.5422e-01,
        -1.1316e-02, -9.1395e-02,  3.9827e-03,  3.7718e-03,  8.4600e-02,
         3.2440e-01,  2.9082e-02,  7.2569e-02,  2.0624e-01, -3.1850e-02,
        -2.9225e-01, -1.0735e+00,  1.3734e-01, -6.4262e-02,  2.1744e-02,
         3.8758e-01,  2.6767e-01,  9.2501e-01,  4.0303e-02, -2.7581e-01,
         1.3523e+00, -1.9009e-01, -5.6931e-01, -1.0036e-01,  6.2834e-01,
        -3.4921e-01, -2.4104e-01,  2.8262e-01, -6.4487e-01, -4.9132e-02,
         4.5140e-01, -5.4630e-01, -1.2456e+00, -6.4362e-01,  3.1764e-01,
         4.5494e-01, -2.2621e-01,  1.9581e-01,  6.7139e-02,  7.9333e-01,
        -1.0154e+00,  1.2590e+00,  5.6446e-01,  1.5344e+00, -2.7626e-01,
        -3.5829e-01, -8.0456e-02, -2.2484e-01,  2.1019e-01,  1.5037e+00,
        -9.2238e-02,  1.7575e-01,  1.4488e-01, -9.0606e-02, -3.4315e-02,
        -1.1798e-01,  4.9016e-02,  1.2655e-01,  2.0398e-02, -1.4590e-01,
         4.6503e-02, -9.0627e-02,  5.3432e-01,  9.5592e-02,  3.0439e-02,
        -9.1553e-02,  3.0742e-01,  2.3714e-02,  6.1091e-01, -6.4398e-01,
         1.0881e-01, -1.8282e-01, -6.0190e-03,  4.2567e-02, -9.9160e-02,
        -1.0588e-01,  5.4083e-02,  8.9616e-01, -5.0887e-01, -1.0871e-01,
         9.2129e-01,  3.0739e-01,  7.7433e-01, -1.2207e-01, -3.5472e-02,
        -2.0978e-01,  1.0559e+00,  1.6282e+00,  5.0253e-01, -1.5061e+00,
         8.4372e-01, -9.5014e-01,  1.1815e+00, -7.4492e-01, -5.9696e-01,
         1.5108e+00,  1.4688e-01,  6.7964e-01, -7.8518e-01,  5.3391e-01,
        -1.3997e+00, -4.1411e-01,  5.5648e-02, -4.8379e+00,  1.0876e+00,
        -1.1789e+00, -2.8052e-01, -4.4673e+00, -1.3692e+00,  1.1437e+00,
        -1.1509e+00,  8.2742e-01,  9.0143e-01,  1.5215e+00, -6.9206e-01,
        -1.0323e+00,  1.4034e+00, -3.3546e+00,  1.1540e+00, -1.6392e+00,
        -6.1035e-01,  1.2794e-01,  6.8211e-01,  5.0442e-01, -8.1548e-01,
         8.2813e-01,  1.0878e-01,  3.0689e-01, -1.6424e-01, -5.1111e-01,
         1.4250e+00, -2.5030e-01,  4.7142e-01, -1.0563e+00,  5.8240e-01,
        -1.7298e+00,  5.6541e-02,  8.0646e-01,  5.9853e-02,  2.0014e-02,
        -5.2981e-01,  4.4419e-01,  3.1676e-02, -5.6208e-02,  5.6699e-01,
        -7.6753e-01,  6.2998e-01,  9.2212e-01,  5.3337e-01,  3.1251e-01,
         3.9229e-01, -4.0896e-01,  9.4988e-02,  9.6950e-01,  1.4040e-01,
         4.9529e-01, -6.4061e-02, -2.6651e-01, -3.5887e-01,  6.1732e-01,
        -7.3828e-01, -1.9785e-01, -5.2321e-01,  4.7790e-01, -1.4744e-01,
        -3.8839e-01, -3.1911e-02,  2.1345e-01,  4.7027e-01, -1.8210e-01,
         7.9799e-01,  1.1602e+00, -3.1641e-01,  3.5737e-01, -9.7630e-01,
         4.8066e-01, -2.2713e-01,  6.9110e-02,  4.0520e-02, -3.3494e-01,
        -2.0844e-01, -6.5756e-01,  2.5031e+00, -6.4794e-01,  8.8071e-02,
         1.1167e+00,  5.5225e-01,  3.0411e-01, -7.4404e-01,  3.1479e-01,
         1.0392e+00, -9.4096e-01, -2.0599e+00, -5.0598e-01,  1.3895e+00,
        -1.0465e+00,  2.4188e-01, -1.2749e+00,  9.8237e-01,  7.1508e-01,
        -1.4448e+00,  5.7748e-01, -5.2759e-01,  7.7216e-01, -4.6158e-01,
         1.5563e+00, -3.5756e-01, -1.0047e+00,  2.4717e+00, -5.7073e-01,
         1.3029e+00, -2.9629e-01,  2.7632e+00,  8.8490e-01, -1.3502e+00,
         7.2237e-01, -6.1641e-01, -9.5726e-01, -8.3432e-01,  7.5267e-01,
         8.5168e-01, -1.1353e+00,  1.4822e+00, -1.8510e+00,  1.3451e+00,
        -6.3026e-01, -3.4880e-01,  9.7513e-01,  7.8524e-01, -8.5605e-01,
         9.4281e-01,  3.6983e-01,  3.1459e-01, -4.4061e-01, -3.5219e-01,
         8.9484e-01, -9.0904e-02,  1.1885e-01, -9.6290e-01,  4.1455e-01,
        -9.8757e-01,  3.3461e-02,  6.3085e-01,  1.7037e-01,  8.4340e-01,
        -6.7104e-01,  9.3110e-01, -2.8821e-02, -5.2940e-02,  5.5377e-01,
        -2.4982e-01,  6.2353e-01, -3.3162e-01,  2.3782e-01,  4.9824e-03,
        -1.0332e+00, -3.5379e-01, -2.0730e-01,  1.0556e+00, -3.8331e-01;
bias2 <<  1.0225,  0.0826, -1.0791, -0.1001,  1.3417,  0.5208,  0.2894, -0.8793,
        -0.1305, -1.2536, -0.9127,  0.6163, -0.3691,  1.0817,  1.2695, -0.5251,
         0.0620,  0.9776,  0.5252, -0.0213, -0.5493, -0.7025,  0.7991,  0.5126,
         0.7682,  0.4605, -0.9658,  0.6663,  0.4570, -0.5699,  1.4720, -0.1923,
        -0.4614, -1.0257,  0.4330;
weight4 <<  1.8636e+00,  1.6552e-01, -1.2620e-02,  2.1912e+00,  4.8448e-01,
         1.2483e+00, -1.8731e+00, -2.4291e+00, -2.3216e+00,  3.0398e+00,
         1.9158e+00,  2.1203e+00, -1.9593e+00, -3.2872e+00, -3.4796e+00,
        -2.2026e+00,  1.6124e+00,  2.5240e+00,  1.8752e+00,  5.8665e-01,
        -1.5118e+00, -1.6444e+00,  1.9197e+00,  8.5886e-01,  1.6352e+00,
         1.6672e+00, -1.3480e+00,  1.7412e+00,  1.4337e+00, -2.0382e+00,
        -3.4942e+00,  3.7285e-01, -1.7275e+00,  2.7605e+00,  1.0364e+00,
         1.9198e+00, -1.6046e+00, -8.1044e-03,  1.4298e+00,  2.5854e+00,
         8.5436e-01, -3.1160e+00, -9.9407e-01, -1.5621e+00,  2.0637e+00,
         3.7119e+00,  1.5707e+00, -2.0048e+00, -2.1603e+00, -2.6780e+00,
        -1.1101e+00,  1.1854e+00,  1.4899e+00,  9.0359e-01,  4.5019e-01,
        -2.0229e+00, -1.5398e+00,  1.0165e+00,  6.2954e-01,  1.8165e+00,
         1.9006e+00, -2.8923e+00,  1.4823e+00,  1.2009e+00, -1.4434e+00,
        -2.8754e+00,  1.2008e+00, -1.4505e+00,  3.3923e+00,  1.2471e+00,
        -1.7248e-01, -9.8224e-01, -2.1920e+00, -2.2216e-03,  3.0774e-02,
         8.9966e-01,  8.3114e-03,  1.4129e-01,  4.2047e-01,  4.5779e-02,
         7.4598e-02, -9.5347e-02,  2.8815e-01,  1.6016e-02, -1.7644e-01,
        -4.0930e-01, -4.4675e-02, -5.1678e-01,  9.8085e-01,  9.2119e-01,
        -2.1006e+00,  9.7248e-02,  7.6316e-02,  1.6847e+00,  3.8233e-01,
         1.5121e-01,  1.3630e-01,  1.7258e-01,  1.0881e+00, -9.9235e-02,
         1.1410e-01, -1.8707e+00, -1.0050e+00, -5.7081e-02,  1.9616e+00;
bias4 <<  1.2320,  1.4812, -0.3532;
out_std << 26.659171977493003, 39.62932133729168, 78.4321446208469;
in_mean << 0.005049172788858414, 0.5014784932136536, 0.5003626942634583, 0.500156581401825, 60.011775970458984, 1998.331298828125, 0.7998817563056946, 0.10001819580793381, 0.34496328234672546;
in_std_inv << 0.0028567721601575613, 0.2911893427371979, 0.2885623872280121, 0.2888070046901703, 23.09076499938965, 866.337646484375, 0.28872206807136536, 0.05772889778017998, 0.10094869136810303;

  in_std_inv = in_std_inv.cwiseInverse();
  
  return 0;
}

